[{"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\index.tsx":"1","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\App.tsx":"3","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\theme.tsx":"4","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\login\\login.tsx":"5","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\login\\loginStyle.tsx":"6","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\signup\\signup.tsx":"7","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\signup\\signupStyle.tsx":"8","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\home\\home.tsx":"9","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Navbar\\Navbar.tsx":"10","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Scream\\Scream.tsx":"11","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Scream\\screamStyle.tsx":"12","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\components\\AuthRoute.tsx":"13","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\store.tsx":"14","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\userReducer.tsx":"15","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\uiReducer.tsx":"16","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\dataReducer.tsx":"17","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\types.tsx":"18","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\actions\\userActions.tsx":"19","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Profile\\Profile.tsx":"20","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Profile\\profileStyle.tsx":"21","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\EditDetails\\EditDetails.tsx":"22","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\EditDetails\\editDetailsStyles.tsx":"23","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\components\\MyButton.tsx":"24","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\actions\\dataActions.tsx":"25","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\DeleteScream\\DeleteScream.tsx":"26","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\DeleteScream\\deleteScreamStyle.tsx":"27","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\PostScream\\PostScream.tsx":"28","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\PostScream\\postScreamStyle.tsx":"29","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\ScreamDialog\\ScreamDialog.tsx":"30","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\ScreamDialog\\screamDialogStyle.tsx":"31","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\LikeButton\\LikeButton.tsx":"32","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\LikeButton\\likeButtonStyle.tsx":"33"},{"size":506,"mtime":1607899717322,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":1922,"mtime":1608247386255,"results":"37","hashOfConfig":"35"},{"size":367,"mtime":1608002612700,"results":"38","hashOfConfig":"35"},{"size":3910,"mtime":1608240421272,"results":"39","hashOfConfig":"35"},{"size":516,"mtime":1608002804384,"results":"40","hashOfConfig":"35"},{"size":5003,"mtime":1608077474162,"results":"41","hashOfConfig":"35"},{"size":517,"mtime":1608003108687,"results":"42","hashOfConfig":"35"},{"size":1301,"mtime":1608190415018,"results":"43","hashOfConfig":"35"},{"size":1754,"mtime":1608236580131,"results":"44","hashOfConfig":"35"},{"size":2760,"mtime":1608253001551,"results":"45","hashOfConfig":"35"},{"size":242,"mtime":1608235765415,"results":"46","hashOfConfig":"35"},{"size":782,"mtime":1608077575629,"results":"47","hashOfConfig":"35"},{"size":735,"mtime":1608179072041,"results":"48","hashOfConfig":"35"},{"size":1741,"mtime":1608193086778,"results":"49","hashOfConfig":"35"},{"size":791,"mtime":1608248928088,"results":"50","hashOfConfig":"35"},{"size":1567,"mtime":1608253569268,"results":"51","hashOfConfig":"35"},{"size":753,"mtime":1608248929685,"results":"52","hashOfConfig":"35"},{"size":2294,"mtime":1608087408269,"results":"53","hashOfConfig":"35"},{"size":5046,"mtime":1608177356792,"results":"54","hashOfConfig":"35"},{"size":1041,"mtime":1608080171843,"results":"55","hashOfConfig":"35"},{"size":4468,"mtime":1608177472360,"results":"56","hashOfConfig":"35"},{"size":199,"mtime":1608091008330,"results":"57","hashOfConfig":"35"},{"size":596,"mtime":1608177541988,"results":"58","hashOfConfig":"35"},{"size":2460,"mtime":1608248931911,"results":"59","hashOfConfig":"35"},{"size":2170,"mtime":1608240190005,"results":"60","hashOfConfig":"35"},{"size":154,"mtime":1608236179038,"results":"61","hashOfConfig":"35"},{"size":4132,"mtime":1608248384853,"results":"62","hashOfConfig":"35"},{"size":376,"mtime":1608248496956,"results":"63","hashOfConfig":"35"},{"size":3785,"mtime":1608253377549,"results":"64","hashOfConfig":"35"},{"size":785,"mtime":1608252031848,"results":"65","hashOfConfig":"35"},{"size":1945,"mtime":1608253182673,"results":"66","hashOfConfig":"35"},{"size":150,"mtime":1608252208276,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"192rga6",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\index.tsx",[],["138","139"],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\App.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\theme.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\login\\login.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\login\\loginStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\signup\\signup.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\signup\\signupStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\pages\\home\\home.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Scream\\Scream.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Scream\\screamStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\components\\AuthRoute.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\store.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\userReducer.tsx",["140","141","142"],"import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  LOADING_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n} from \"../types\";\r\ninterface Like {\r\n  userHandle: string;\r\n  screamId: string;\r\n}\r\ninterface UserCredential {\r\n  handle?: string;\r\n  userId?: string;\r\n  imageUrl?: string;\r\n  createdAt?: any;\r\n  location?: string;\r\n  email?: string;\r\n  website?: string;\r\n  bio?: string;\r\n}\r\ninterface State {\r\n  authenticated: boolean;\r\n  credentials: UserCredential;\r\n  likes: Like[];\r\n  notifications: any[];\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  authenticated: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: [],\r\n  loading: false,\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialState, action: any) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        authenticated: true,\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload,\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId,\r\n          },\r\n        ],\r\n      };\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(\r\n          (like) => like.screamId !== action.payload.screamId\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\uiReducer.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\reducers\\dataReducer.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\types.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\actions\\userActions.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Profile\\Profile.tsx",["143","144"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport { profileStyle } from \"./profileStyle\";\r\nimport EditDetails from \"../EditDetails/EditDetails\";\r\nimport MyButton from \"../../util/components/MyButton\";\r\n\r\n// MUI imports\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n// import models\r\nimport { UserData } from \"../../models/home\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { uploadImage, logoutUser } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = profileStyle;\r\n\r\ntype Props = {\r\n  classes: any;\r\n  user: UserData;\r\n  uploadImage: Function;\r\n  logoutUser: Function;\r\n};\r\n\r\nclass Profile extends React.Component<Props> {\r\n  handleEditPicture = () => {\r\n    const fileInput = document.getElementById(\"imageInput\");\r\n    fileInput?.click();\r\n  };\r\n  handleImageChange = (event: any) => {\r\n    const image = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    this.props.uploadImage(formData);\r\n  };\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const hidden = true;\r\n    const {\r\n      classes,\r\n      user: {\r\n        credentials: { handle, createdAt, imageUrl, bio, website, location },\r\n        loading,\r\n        authenticated,\r\n      },\r\n    } = this.props;\r\n\r\n    let profileMarkup = !loading ? (\r\n      authenticated ? (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                hidden={hidden}\r\n                onChange={this.handleImageChange}\r\n              />\r\n              <MyButton\r\n                tip=\"Edit profile picture\"\r\n                onClick={this.handleEditPicture}\r\n                btnClassName=\"button\"\r\n              >\r\n                <Edit color=\"primary\" />\r\n              </MyButton>\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/users/${handle}`}\r\n                color=\"primary\"\r\n                variant=\"h5\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              <hr />\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {\" \"}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />{\" \"}\r\n              <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")} </span>\r\n            </div>\r\n            <MyButton\r\n              tip=\"Logout\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              <KeyboardReturn color=\"primary\" />\r\n            </MyButton>\r\n            <EditDetails />\r\n          </div>\r\n        </Paper>\r\n      ) : (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            No profile found, Please login again.\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/login\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/signup\"\r\n            >\r\n              Signup\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      )\r\n    ) : (\r\n      <p>Loading....</p>\r\n    );\r\n    return profileMarkup;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  uploadImage,\r\n  logoutUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Profile));\r\n","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\Profile\\profileStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\EditDetails\\EditDetails.tsx",["145","146"],"import React, { Fragment } from \"react\";\r\nimport { editDetailsStyle } from \"./editDetailsStyles\";\r\nimport MyButton from \"../../util/components/MyButton\";\r\n// MUI imports\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n// models\r\nimport { Credentials } from \"../../models/home\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { editUserDetails } from \"../../redux/actions/userActions\";\r\n\r\nconst styles = editDetailsStyle;\r\n\r\ntype Props = {\r\n  classes: any;\r\n  editUserDetails: Function;\r\n  credentials: Credentials;\r\n};\r\n\r\nclass EditDetails extends React.Component<Props> {\r\n  state = {\r\n    bio: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    open: false,\r\n  };\r\n  mapUserDetailsToProps = (credentials: Credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : \"\",\r\n      website: credentials.website ? credentials.website : \"\",\r\n      location: credentials.location ? credentials.location : \"\",\r\n    });\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n    this.mapUserDetailsToProps(this.props.credentials);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = () => {\r\n    const userDetails = {\r\n      bio: this.state.bio,\r\n      website: this.state.website,\r\n      location: this.state.location,\r\n    };\r\n    this.props.editUserDetails(userDetails);\r\n    this.handleClose();\r\n  };\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserDetailsToProps(credentials);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Edit details\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.button}\r\n        >\r\n          <Edit color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit your details</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                type=\"text\"\r\n                label=\"Bio\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A short bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                type=\"text\"\r\n                label=\"Website\"\r\n                placeholder=\"Your website\"\r\n                className={classes.textField}\r\n                value={this.state.website}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                type=\"text\"\r\n                label=\"Location\"\r\n                placeholder=\"Your location\"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  credentials: state.user.credentials,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  editUserDetails,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(EditDetails));\r\n","C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\EditDetails\\editDetailsStyles.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\util\\components\\MyButton.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\redux\\actions\\dataActions.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\DeleteScream\\DeleteScream.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\DeleteScream\\deleteScreamStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\PostScream\\PostScream.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\PostScream\\postScreamStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\ScreamDialog\\ScreamDialog.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\ScreamDialog\\screamDialogStyle.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\LikeButton\\LikeButton.tsx",[],"C:\\Users\\Reed\\Desktop\\screamify-client\\src\\components\\LikeButton\\likeButtonStyle.tsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":3,"column":3,"nodeType":"153","messageId":"154","endLine":3,"endColumn":13},{"ruleId":"151","severity":1,"message":"155","line":4,"column":3,"nodeType":"153","messageId":"154","endLine":4,"endColumn":15},{"ruleId":"151","severity":1,"message":"156","line":5,"column":3,"nodeType":"153","messageId":"154","endLine":5,"endColumn":13},{"ruleId":"151","severity":1,"message":"157","line":19,"column":8,"nodeType":"153","messageId":"154","endLine":19,"endColumn":18},{"ruleId":"151","severity":1,"message":"158","line":20,"column":8,"nodeType":"153","messageId":"154","endLine":20,"endColumn":15},{"ruleId":"151","severity":1,"message":"158","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":15},{"ruleId":"151","severity":1,"message":"157","line":13,"column":8,"nodeType":"153","messageId":"154","endLine":13,"endColumn":18},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'SET_ERRORS' is defined but never used.","Identifier","unusedVar","'CLEAR_ERRORS' is defined but never used.","'LOADING_UI' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","no-global-assign","no-unsafe-negation"]